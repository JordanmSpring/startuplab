// TODO: Move these to a routes.js file
angular.module('StartupLab', ['ngRoute', 'ngResource', 'frapontillo.bootstrap-switch', 'angulartics', 'angulartics.google.analytics', 'templates'])
 .config(['$routeProvider', function($routeProvider) {

  var userByInviteToken = ['Invite', '$route', function(Invite, $route) {
    console.log("looking for ", $route.current.params.invitation_token);
    return Invite.get($route.current.params.invitation_token).$promise;
  }];

  var loadCurrentUser = [ 'Session', function(Session) {
    return Session.requestCurrentUser();
  }];

  $routeProvider
    .when('/disclaimer', {
      templateUrl: 'static/disclaimer.html',
      controller: 'StaticController'
    })
    .when('/dashboard', {
      templateUrl: 'dashboard/show.html',
      controller: 'DashboardController',
      resolve: { user: loadCurrentUser }
    })
    .when('/ideas', {
      templateUrl: 'ideas/index.html',
      controller: 'IdeasController',
      resolve: { user: loadCurrentUser }
    })
    .when('/ideas/new', {
      templateUrl: 'ideas/new.html',
      controller: 'NewIdeaController',
      resolve: { user: loadCurrentUser }
    })
    .when('/ideas/:id', {
      templateUrl: 'ideas/show.html',
      controller: 'ShowIdeaController',
      resolve: { user: loadCurrentUser }
    })
    .when('/ideas/:ideaId/users', {
      templateUrl: 'user_ideas/index.html',
      controller: 'UserIdeasController',
      resolve: { user: loadCurrentUser }
    })
    .when('/sign-in', {
      templateUrl: 'sessions/new.html',
      controller: 'SessionsController',
      controllerAs: 'session'
    })
    .when('/users/invitation/accept', {
      templateUrl: 'users/accept.html',
      controller: 'InvitationsController'
    })
    .when('/', {
      templateUrl: 'sessions/new.html',
      controller: 'RootController',
      resolve: { user: loadCurrentUser }
    })
    .otherwise({
      redirectTo: '/'
    });
 }])
 .config([
   "$httpProvider", function($httpProvider) {
     $httpProvider.defaults.headers.common['X-CSRF-Token'] = $('meta[name=csrf-token]').attr('content');
   }
 ])
 .config([
   "$analyticsProvider", function($analyticsProvider) {
     $analyticsProvider.virtualPageviews(true);
   }
 ]);